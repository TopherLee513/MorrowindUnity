using System;
using System.Collections.Generic;
using UnityEngine;
using Random = UnityEngine.Random;

namespace Esm
{
	public class PathgridPoint
	{
		//private int cost;
		public byte autogenerated, connectionNum; // number of connections for this point
		private readonly short cost; // Cost?
		private readonly List<PathgridPoint> connectedPoints = new List<PathgridPoint>();

		public PathgridPoint(System.IO.BinaryReader reader)
		{
			Position = new Vector3()
			{
				x = reader.ReadInt32(),
				z = reader.ReadInt32(),
				y = reader.ReadInt32()
			};

			autogenerated = reader.ReadByte();
			connectionNum = reader.ReadByte();
			cost = reader.ReadInt16();
		}

		public Vector3 Position { get; private set; }

		public void AddConnection(PathgridPoint connection)
		{
			connectedPoints.Add(connection);
		}

		/// <summary>
		/// Gets a random point connected to this point
		/// </summary>
		/// <returns></returns>
		public PathgridPoint GetConnectedPoint()
		{
			var index = Random.Range(0, connectedPoints.Count);
			var connectedPoint = connectedPoints[index];
			return connectedPoint;
		}
	}
}